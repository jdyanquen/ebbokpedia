<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
    
    <context:component-scan base-package="com.jcode.ebookpedia.config"/>
    
    <context:property-placeholder location="classpath:hibernate.properties" />
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="com.jcode.ebookpedia" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.jdbc.lob.non_contextual_creation">${hibernate.non_contextual_creation}</prop>
			</props>
		</property>
	</bean>
	
	<!-- HikariCP configuration -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
    	<property name="dataSourceClassName" value="${dataSource.className}" />
    	<property name="maximumPoolSize" value="${hikari.maximumPoolSize}" />
	    <property name="maxLifetime" value="${hikari.maxLifetime}" />
	    <property name="idleTimeout" value="${hikari.idleTimeout}" />
	    <property name="dataSourceProperties" >
	        <props>
	            <prop key="url">${dataSource.url}</prop>
	            <prop key="user">${dataSource.user}</prop>
	            <prop key="password">${dataSource.password}</prop>
	        </props>
	      </property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="objectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
		<property name="modulesToInstall" value="com.fasterxml.jackson.datatype.jsr310.JavaTimeModule" />
		<property name="dateFormat">
	        <bean class="java.text.SimpleDateFormat">
	            <constructor-arg value="yyyy-MM-dd'T'HH:mm:ss.SSSXXX"/>
	        </bean>
	    </property>
	</bean>
	
	<mvc:annotation-driven>
	    <mvc:message-converters register-defaults="false">
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="objectMapper" ref="objectMapper"/>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
</beans>